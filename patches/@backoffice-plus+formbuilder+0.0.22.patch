diff --git a/node_modules/@backoffice-plus/formbuilder/dist/formbuilder.es.js b/node_modules/@backoffice-plus/formbuilder/dist/formbuilder.es.js
index f236b1c..882dfba 100644
--- a/node_modules/@backoffice-plus/formbuilder/dist/formbuilder.es.js
+++ b/node_modules/@backoffice-plus/formbuilder/dist/formbuilder.es.js
@@ -10110,7 +10110,7 @@ const HX = { class: "labelTool" }, VX = { key: 0 }, KX = {
     const n = e;
     t({ tool: n.tool });
     const i = () => {
-      confirm("Wirklich löschen?") && r("deleteByIndex", { index: n.index });
+      Promise.resolve(confirm("Wirklich löschen?")).then((confirmed) => { if(confirmed) { r("deleteByIndex", { index: n.index }); }});
     };
     return (s, u) => (he(), Se("div", HX, [
       wt(Ei, {
@@ -14187,7 +14187,7 @@ const uZ = { class: "unknownTool" }, lZ = { key: 0 }, cZ = {
     const n = e;
     t({ tool: n.tool });
     const i = () => {
-      confirm("Wirklich löschen?") && r("deleteByIndex", { index: n.index });
+      Promise.resolve(confirm("Wirklich löschen?")).then((confirmed) => { if(confirmed) { r("deleteByIndex", { index: n.index }); }});
     };
     return (s, u) => (he(), Se("div", uZ, [
       Ia(" UNKNOWN " + ft(e.tool.propertyName) + " ", 1),
@@ -20584,7 +20584,7 @@ const nte = { class: "combinatorTool" }, ote = {
       const O = $.index;
       s.value.splice(O, 1), jr.emit("formBuilderUpdated");
     }, y = () => {
-      confirm("Wirklich löschen?") && r("deleteByIndex", { index: n.index });
+      Promise.resolve(confirm("Wirklich löschen?")).then((confirmed) => { if(confirmed) { r("deleteByIndex", { index: n.index }); }});
     };
     return ($, O) => (he(), Se("div", nte, [
       wt(Ei, {
@@ -20769,7 +20769,7 @@ const lte = {
       const O = $.index;
       s.value.splice(O, 1), jr.emit("formBuilderUpdated");
     }, y = () => {
-      confirm("Wirklich löschen?") && r("deleteByIndex", { index: n.index });
+      Promise.resolve(confirm("Wirklich löschen?")).then((confirmed) => { if(confirmed) { r("deleteByIndex", { index: n.index }); }});
     };
     return ($, O) => (he(), Se("div", {
       class: Me(["objectTool", [{ root: e.isRoot }]])
@@ -21193,7 +21193,7 @@ const Ete = {
     }, p = (y) => {
       jr.emit("formBuilderUpdated", y);
     }, g = () => {
-      confirm("Wirklich löschen?") && r("deleteByIndex", { index: n.index });
+      Promise.resolve(confirm("Wirklich löschen?")).then((confirmed) => { if(confirmed) { r("deleteByIndex", { index: n.index }); }});
     };
     return (y, $) => (he(), Se("div", {
       class: Me(["flexAreaTool", ["group/itemF"]]),
@@ -21429,7 +21429,7 @@ const Dte = {
       const _ = S.index;
       s.value.splice(_, 1), jr.emit("formBuilderUpdated");
     }, O = () => {
-      confirm("Wirklich löschen?") && r("deleteByIndex", { index: n.index });
+      Promise.resolve(confirm("Wirklich löschen?")).then((confirmed) => { if(confirmed) { r("deleteByIndex", { index: n.index }); }});
     };
     return (S, _) => (he(), Se("div", {
       class: Me(["categorizationTool", ["group/itemC"]])
@@ -21532,7 +21532,7 @@ const kte = { class: "font-bold" }, Ute = { key: 0 }, zte = { key: 0 }, Bte = {
     const i = n.tool.schema;
     n.tool.uischema;
     const s = mt(() => rZ(n.tool.schema, n.tool.uischema)), u = () => {
-      confirm("Wirklich löschen?") && r("deleteByIndex", { index: n.index });
+      Promise.resolve(confirm("Wirklich löschen?")).then((confirmed) => { if(confirmed) { r("deleteByIndex", { index: n.index }); }});
     };
     return (l, f) => (he(), Se("div", {
       class: Me(["formInputByTypeTool", ["group/item"]])
@@ -21904,7 +21904,7 @@ const Jte = { class: "referenceTool" }, Qte = { key: 0 }, Yte = { class: "bg-gra
     const n = e;
     t({ tool: n.tool });
     const i = () => {
-      confirm("Wirklich löschen?") && r("deleteByIndex", { index: n.index });
+      Promise.resolve(confirm("Wirklich löschen?")).then((confirmed) => { if(confirmed) { r("deleteByIndex", { index: n.index }); }});
     };
     return (s, u) => (he(), Se("div", Jte, [
       wt(Ei, {
@@ -22468,7 +22468,7 @@ const are = ["title"], sre = { key: 0 }, ure = { key: 1 }, lre = { key: 2 }, cre
       const E = A.index;
       s.value.splice(E, 1), jr.emit("formBuilderUpdated");
     }, w = () => {
-      confirm("Wirklich löschen?") && r("deleteByIndex", { index: n.index });
+      Promise.resolve(confirm("Wirklich löschen?")).then((confirmed) => { if(confirmed) { r("deleteByIndex", { index: n.index }); }});
     };
     return (A, E) => (he(), Se("div", {
       class: Me(["arrayTool", { isInlineType: N(f), isRoot: e.isRoot }]),
@@ -25242,7 +25242,7 @@ const Joe = { key: 0 }, yS = /* @__PURE__ */ Dt({
     }), d = () => {
       r.addItem(r.control.value.path, Ys(r.control.value.schema))(), !r.appliedOptions.collapseNewItems && s && (i.value = s.value - 1);
     }, p = (g) => {
-      confirm("Delete Element: " + r.childLabelForIndex(g)) && (r == null || r.removeItems(r.control.value.path, [g])());
+      Promise.resolve(confirm("Delete Element: " + r.childLabelForIndex(p))).then((confirmed) => { if(confirmed) { (r == null || r.removeItems(r.control.value.path, [p])()); } });
     };
     return (g, y) => (he(), Se("div", {
       class: Me(N(r).styles.arrayList.root)
